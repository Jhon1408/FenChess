/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Graphics;

import Modules.Board;
import Modules.Pieces.*;
import Modules.Translate;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Jhonatan
 */
public class Game extends javax.swing.JFrame {
    public int sizeX = 400;
    public int sizeY = 400;
    
    Translate Convert = new Translate();
    Pieces Pieces = new Pieces();
    JLabel FEN;
    
    public Game() {
        initComponents();
        setupFrame();
    }
    
    public void setupFrame() {
        setSize(sizeX, sizeY);
        DibujarCasillas();
        setCursor(getCursor());
        setSize(sizeX+sizeX/2,sizeY+50);
        setLocationRelativeTo(null);       
        setResizable(false);
    }
    
    public void setupLabels(Board Board) {
        JLabel I = createLabel("FEN: ", 20, sizeY-15, Color.BLACK);
        add(I,0,0);
        FEN = createLabel(Convert.formatBoard(Board), 50, sizeY-15, Color.BLACK);
        add(FEN,0,0);
    }
    
    public void updateLabels(Board Board) {
        FEN.setText(Convert.formatBoard(Board));
    }
    
    public void placePieces(Board Board) {
        Pieces.game = this;    
        Pieces.fillBoard(Board);
    }
    
    public void updateTable(Board board, String[][] newTable) {
        board.table = newTable;
        updateLabels(board);
    }
    
    @Override
    public Cursor getCursor() {
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Image Mouse = toolkit.getImage("Images/Mouse.png").getScaledInstance(sizeX/6, sizeY/6, Image.SCALE_DEFAULT);
        Point point = new Point(9,10);
        Cursor cursor = toolkit.createCustomCursor(Mouse, point, "Cursor");
        return cursor;
    }
    
    public void DibujarCasillas() {        
        for(int i = 0; i <= 7; i++) {
            for(int j = 0; j <= 3; j++) {
                if(i%2 == 0) {
                    add(createPane("White",(getWidth()/8)*(2*j),(getHeight()/8)*(i)));
                } else {
                    add(createPane("White",(getWidth()/8)*(2*j+1),(getHeight()/8)*(i)));
                }   
            }
        }
        
        for(int i = 0; i <= 7; i++) {
            for(int j = 0; j <= 3; j++) {
                if(i%2 == 0) {
                    add(createPane("Black",(getWidth()/8)*((2*j)+1),(getHeight()/8)*(i)));
                } else {
                    add(createPane("Black",(getWidth()/8)*(2*j),(getHeight()/8)*(i)));
                }
            }
        }
        
        add(createPane("State",0,0));
    }
    
    public JPanel createPane(String type, int x, int y) {
        JPanel Pane = new JPanel();
        Pane.setLocation(x, y);
        Pane.setSize(getWidth()/8, getHeight()/8);
        switch(type) {
            case "Black":
                Pane.setBackground(Color.BLACK);
                break;
            case "White":
                Pane.setBackground(Color.WHITE);
                break;
            case "State":
                Pane.setBackground(Color.LIGHT_GRAY);
                Pane.setLocation(sizeX,0);
                Pane.setSize(sizeX/2,sizeY);
                break;
            default:
                return null;
        }
        return Pane;
    }
    
    public JLabel createLabel(String msg, int x, int y, Color color) {
        JLabel label = new JLabel();
        label.setLocation(x,y); 
        label.setForeground(color);
        label.setSize(500, 50);
        label.setText(msg);
        label.setEnabled(true);
        return label;
    }
    
    public void fillBoard(Board Board) {
        writeState(Board);
    }
    
    public void writeState(Board Board) {        
        add(createLabel("State: ", (sizeX + 20),0, Color.BLACK),0,0);
        
    }
    
    /**
     * Creates new form Game
     */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Game.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Game().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
